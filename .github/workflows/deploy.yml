name: deploy
on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./website
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Cache nix store
        id: cache-nix
        uses: actions/cache@v3
        env:
          cache-name: cache-nix-store
        with:
          path: /nix
          key: nix-${{ env.cache-name }}-${{ hashFiles('flake.lock') }}
          restore-keys: |
            nix-${{ env.cache-name }}-${{ hashFiles('flake.lock') }}
            nix-${{ env.cache-name }}-

      - uses: cachix/install-nix-action@v27

      # Node Setup
      - name: Set pnpm cache store
        run: nix develop --ignore-environment --command pnpm config set store-dir ~/.pnpm-store
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm-store
          key: build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
            build-${{ env.cache-name }}
      - name: Install node dependencies
        run: nix develop --ignore-environment --command pnpm install
      - name: Build assets
        run: nix develop --ignore-environment --command pnpm build

      - name: Cache composer packages
        id: cache-composer
        uses: actions/cache@v3
        env:
          cache-name: cache-composer-packages
        with:
          path: ~/.composer-store
          key: build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
          restore-keys: |
            build-${{ env.cache-name }}-${{ hashFiles('composer.lock') }}
            build-${{ env.cache-name }}
      - name: Install PHP dependencies
        run: nix develop --ignore-environment --keep COMPOSER_HOME --command composer install --no-dev -o
        env:
          COMPOSER_HOME: ~/.composer-store
      - name: Copy .env
        run: cp .env.example .env
      - name: Generate secret key
        run: php artisan key:generate
      - name: Build website
        run: nix develop --ignore-environment --command php artisan export
      - name: Deploy website
        run: nix develop --ignore-environment --command wrangler deploy ./dist --project-name biosecurity-world --branch master
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}