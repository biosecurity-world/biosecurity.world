@tailwind base;
@font-face {
    font-family: "Gilroy";
    font-display: swap;
    src: url(../fonts/Gilroy.woff2) format("woff2");
    font-weight: 700;
    unicode-range: U+0020-007F;
}
@font-face {
    font-family: 'Nunito';
    font-display: swap;
    font-weight: 500;
    src: local("Nunito"), url(../fonts/Nunito-Regular.woff2) format('woff2');
    unicode-range: U+0020-007F;
}
@font-face {
    font-family: 'Nunito';
    font-display: optional;
    font-weight: 700;
    src: url(../fonts/Nunito-Bold.woff2) format('woff2');
    unicode-range: U+0020-007F;
}

.off-screen {
    position: absolute !important;
    top: -9999px !important;
    left: -9999px !important;
}

@tailwind components;
@tailwind utilities;

/** Map */
.app-state {
    @apply absolute inset-0 h-full w-full transition-opacity duration-300 flex items-center justify-center;
}

.state-active {
    @apply pointer-events-auto opacity-100;
}

.state-inactive {
    @apply pointer-events-none opacity-0;
}

#map-wrapper.fullscreen {
    @apply absolute inset-0 px-0 bg-white;

    & .rounded-l-3xl {
        border-bottom-left-radius: 0 !important;
        border-top-left-radius: 0 !important;
    }

    & .rounded-r-3xl {
        border-bottom-right-radius: 0 !important;
        border-top-right-radius: 0 !important;
    }

    & .rounded-tr-3xl {
        border-top-right-radius: 0 !important;
    }
    & aside {
        @apply border-y-0;
    }

}

#map-wrapper:not(.fullscreen) {
        @apply 2xl:px-36 -mt-40;
}

#entry-wrapper:not(:has(> .entry)) {
    display: none;
}

#entry-wrapper:has(> .entry) {
    display: block;
}

/** Filters: Domain */
input[name^="domain_"]:checked + label > .check {
    opacity: 1;
}

input[name^="domain_"]:not(:checked) + label > .check {
    opacity: 0;
}

input[name="domain_technical"]:checked + label[for="domain_technical"] {
    @apply border-technical;
}

input[name="domain_governance"]:checked + label[for="domain_governance"] {
    @apply border-governance;
}

input[name^="domain_"]:checked + label[for^="domain_"] > .at-technical,
input[name^="domain_"]:checked + label[for^="domain_"] > .at-governance {
    color: white;
}

/** Filters: Activity */
label[for^="activity_"].inactive {
    background: #ffffff !important;
    color: theme("colors.gray.500") !important;
}

/** Navbar */
.navlink {
    @apply  underline lg:no-underline mr-4 lg:mr-0 lg:px-2  lg:hover:underline rounded-xl focus:outline-none;
}

.navlink:not(.inverted) {
    @apply lg:hover:bg-emerald-50 lg:focus:bg-emerald-50
}

.navlink.inverted {
    @apply text-white lg:hover:bg-white/20 lg:focus:bg-white/20
}

/** Handle the hover logic on entries */
#entrygroups.hovered [data-entry]:not(.active) {
    opacity: 0.25;
}

#entrygroups.hovered [data-sum].active > .entry-logo {
    @apply border border-primary-600;
}

#entrygroups.hovered .intervention-type:not(:has(+ div > [data-sum].active)) {
    opacity: 0.25;

}

.intervention-type:not(:has(+ div > .matches-filters)) {
    display: none;
    margin: 0 !important;
}

/** Generic toggle component */
[data-toggle="off"] {
    @apply bg-gray-200;
}

[data-toggle="off"] > span {
    @apply translate-x-0;
}

[data-toggle="on"] {
    @apply bg-primary-600;
}

[data-toggle="on"] > span {
    @apply translate-x-5;
}

/** ... */
[data-entry]:not(.matches-filters) {
    display: none;
}

.entrygroup:not(:has(*.matches-filters)) {
    display: none;
}

.intervention-type:has(+ div > .matches-filters) {
    @apply mt-2
}

.intervention-type {
    @apply text-xs tracking-tight text-gray-500 font-semibold -mb-1.5
}


#entry-loader {
    opacity: 0;
    transition: opacity 500ms ease-in;
}

#entry-loader.loading-entry {
    opacity: 1;
}
